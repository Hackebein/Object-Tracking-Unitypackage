name: Build Release

on: 
  push:
    tags:
      - "*.*.*"

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:

      - name: Checkout
        uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Get Name
        id: name
        uses: zoexx/github-action-json-file-properties@b9f36ce6ee6fe2680cd3c32b2c62e22eade7e590
        with: 
            file_path: package.json
            prop_path: name

      - name: Get Version
        id: version
        uses: zoexx/github-action-json-file-properties@b9f36ce6ee6fe2680cd3c32b2c62e22eade7e590
        with: 
            file_path: package.json
            prop_path: version
    
      - name: Set Environment Variables
        run: |
          echo "zipFile=${{ steps.name.outputs.value }}-${{ steps.version.outputs.value }}".zip >> $GITHUB_ENV
          echo "unityPackage=${{ steps.name.outputs.value }}-${{ steps.version.outputs.value }}.unitypackage" >> $GITHUB_ENV
          echo "version=${{ steps.version.outputs.value }}" >> $GITHUB_ENV
      
      - name: Create Unity Folder Structure
        run: |
          mkdir -p Packages/${{ steps.name.outputs.value }}

      # *.unitypackage
      - name: Track Package Meta Files
        run: find Packages/${{ steps.name.outputs.value }} -name \*.meta > metaList
      
      - name: Create UnityPackage
        uses: pCYSl5EDgo/create-unitypackage@b5c57408698b1fab8b3a84d4b67f767b8b7c0be9
        with:
          package-path: ${{ env.unityPackage }}
          include-files: metaList
    
      # *.zip
      - name: Create Package Zip
        run: |
          sed 'p;s/\.meta$//' metaList > fileList
          zip -r ${{ env.zipFile }} . -i @fileList
      
      # Publish the Release to GitHub
      - name: Make Release
        uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844
        with:
          files: |
            ${{ env.zipFile }}
            ${{ env.unityPackage }}
            ${{ env.packagePath }}/package.json
          tag_name: ${{ env.version }}
          token:  ${{ secrets.TOKEN }}
          draft: true
          generate_release_notes: true
